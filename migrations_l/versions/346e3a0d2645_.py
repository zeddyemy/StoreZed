"""empty message

Revision ID: 346e3a0d2645
Revises: 03fd703c1c69
Create Date: 2025-02-25 22:43:41.622593

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '346e3a0d2645'
down_revision = '03fd703c1c69'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE EXTENSION IF NOT EXISTS pg_trgm')
    op.create_table('customer_order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(length=50), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('shipping_address', sa.JSON(), nullable=True),
    sa.Column('billing_address', sa.JSON(), nullable=True),
    sa.Column('meta_info', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('total_amount >= 0', name='check_total_amount_positive'),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_number')
    )
    with op.batch_alter_table('customer_order', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_customer_order_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_order_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_order_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_order_user_status', ['user_id', 'status'], unique=False)

    # op.drop_table('order')
    with op.batch_alter_table('order_item', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_order_item_order_id'), ['order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_order_item_product_id'), ['product_id'], unique=False)
        batch_op.drop_constraint('order_item_order_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'customer_order', ['order_id'], ['id'])
        batch_op.drop_column('subtotal')

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.drop_constraint('payment_order_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'customer_order', ['order_id'], ['id'])

    with op.batch_alter_table('profile', schema=None) as batch_op:
        batch_op.create_index('ix_profile_firstname_trgm', ['firstname'], unique=False, postgresql_using='gin', postgresql_ops={'firstname': 'gin_trgm_ops'})
        batch_op.create_index('ix_profile_lastname_trgm', ['lastname'], unique=False, postgresql_using='gin', postgresql_ops={'lastname': 'gin_trgm_ops'})
    
    

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('profile', schema=None) as batch_op:
        batch_op.drop_index('ix_profile_lastname_trgm', postgresql_using='gin', postgresql_ops={'lastname': 'gin_trgm_ops'})
        batch_op.drop_index('ix_profile_firstname_trgm', postgresql_using='gin', postgresql_ops={'firstname': 'gin_trgm_ops'})

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('payment_order_id_fkey', 'order', ['order_id'], ['id'])

    with op.batch_alter_table('order_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subtotal', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('order_item_order_id_fkey', 'order', ['order_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_order_item_product_id'))
        batch_op.drop_index(batch_op.f('ix_order_item_order_id'))

    op.create_table('order',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('shipping_address', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('billing_address', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('meta_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.id'], name='order_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_pkey'),
    sa.UniqueConstraint('order_number', name='order_order_number_key')
    )
    with op.batch_alter_table('customer_order', schema=None) as batch_op:
        batch_op.drop_index('ix_order_user_status')
        batch_op.drop_index(batch_op.f('ix_customer_order_user_id'))
        batch_op.drop_index(batch_op.f('ix_customer_order_status'))
        batch_op.drop_index(batch_op.f('ix_customer_order_created_at'))

    op.drop_table('customer_order')
    op.execute('DROP EXTENSION IF EXISTS pg_trgm')
    # ### end Alembic commands ###
